# Workflow for ITAS 276 DevSecOps Assignment 3: A high-octane race through the pipeline track!
name: ITAS 276 DevSecOps Pipeline

# Start the engines on push or pull request to the main branch
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Grant permissions for our pit crew to tune the car and log the race
permissions:
  security-events: write  # For uploading SARIF files to the race log
  actions: read          # To track lap times (workflow details)
  contents: read         # To load the car (repository code)

jobs:
  # Job 1: Rev up the engines and announce the race start
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Send race start message to Pit Crew (Discord)
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}  # Secret radio to the pit crew
          username: "Race Crew Chief"  # The boss calling the shots
          avatar-url: "https://i.imgur.com/5z5K9XJ.png"  # A cool race car avatar (public image)
          embed-title: "üèÅ Race On!"
          embed-description: "Car [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}) is peeling out! Driver‚Äôs note: `${{ github.event.head_commit.message }}`"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-author-name: "Driver: ${{ github.triggering_actor }}"  # The speedster behind the wheel
  
  # Job 2: Build stage - Tune the car in the garage
  build:
    runs-on: ubuntu-latest
    needs: notify-start  # Waits for the green flag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Rolls the car into the garage

      - name: Install dependencies
        run: echo "Installing dependencies..."  # Bolts on the turbo

      - name: Run tests
        run: echo "Running tests..."  # Revs the engine for a test lap

      - name: Notify Discord - Car Tuned
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Race Crew Chief"
          avatar-url: "https://i.imgur.com/5z5K9XJ.png"
          embed-title: "üîß Pit Stop Complete!"
          embed-description: "The car‚Äôs tuned and purring like a champ! Ready to hit the track üèéÔ∏è"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  # Job 3: Semgrep stage - Check the car for safety hazards
  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-latest
    needs: build  # Hits the track after tuning
    container:
      image: semgrep/semgrep  # Fires up the safety scanner
    if: (github.actor != 'dependabot[bot]')  # Ignores automated pit bots
    steps:
      - uses: actions/checkout@v4  # Inspects the chassis (code)

      - name: Run Semgrep scan
        run: semgrep ci --sarif > semgrep-results.sarif  # Scans for loose bolts
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}  # Key to the diagnostic tool

      - name: Upload Semgrep SARIF results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-scan-results  # Logs the safety report
          path: semgrep-results.sarif  # Path to the diagnostics
          
      - name: Notify Discord - Safety Check Done
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Race Crew Chief"
          avatar-url: "https://i.imgur.com/5z5K9XJ.png"
          embed-title: "üõ°Ô∏è Safety Check Cleared!"
          embed-description: "Semgrep‚Äôs given the green light. [Download Race Diagnostics](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})‚Äîno flats detected!"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  # Job 4: Cross the finish line with a victory lap
  notify-complete:
    runs-on: ubuntu-latest
    needs: [semgrep]  # Pulls into victory lane after the scan
    steps:
      - name: Send finish line message to Discord
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Race Crew Chief"
          avatar-url: "https://i.imgur.com/5z5K9XJ.png"
          embed-title: "üèÜ Checkered Flag!"
          embed-description: "Car [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}) has crossed the finish line in style! Full throttle success! üéâ"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
