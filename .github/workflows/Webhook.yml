name: ITAS 276 DevSecOps Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Add permissions at the workflow level
permissions:
  security-events: write  # Required for uploading SARIF files to Code Scanning
  actions: read          # Needed to access workflow run details
  contents: read         # Needed to checkout code

jobs:
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Send start message to Discord
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          embed-title: "üöÄ Pipeline Started"
          embed-description: "A new workflow has started for [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }})"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-author-name: "${{ github.triggering_actor }}"
  
  build:
    runs-on: ubuntu-latest
    needs: notify-start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: echo "Installing dependencies..."

      - name: Run tests
        run: echo "Running tests..."

      - name: Notify Discord - Build Completed
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          embed-title: "‚úÖ Build Completed"
          embed-description: "The build has successfully completed."
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  semgrep-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep scan
        run: semgrep --config=auto --sarif > semgrep.sarif
        continue-on-error: true  # Ensures the workflow continues even if issues are found

      - name: Upload Semgrep SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-report
          path: semgrep.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      - name: Notify Discord - Semgrep Scan Completed
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          embed-title: "üîí Semgrep Scan Completed"
          embed-description: "Semgrep has scanned the repository for vulnerabilities. [Download SARIF Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  sast-analysis:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    steps:
      - name: Run SAST Analysis
        run: echo "Performing Static Analysis..."

      - name: Upload SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: sarif-report
          path: Results.sarif

      - name: Notify Discord - SAST Completed
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          embed-title: "üîç SAST Analysis Completed"
          embed-description: "Static Analysis has been performed. [Download SARIF Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  notify-complete:
    runs-on: ubuntu-latest
    needs: [sast-analysis]
    steps:
      - name: Send completion message to Discord
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          embed-title: "üéâ Pipeline Completed"
          embed-description: "The workflow has completed successfully."
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
